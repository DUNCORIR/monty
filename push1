#include "monty.h"

void push(stack_t **stack, unsigned int line_number)
{
    stack_t *new_node, *current;
    char *arg; 
    int value;

    arg = strtok(NULL, " \t\n"); 
    if (arg == NULL || ((value = atoi(arg)) == 0 && strcmp(arg, "0") != 0))
    {	
        fprintf(stderr, "L%u: usage: push integer\n", line_number);
        exit(EXIT_FAILURE);
    }

    new_node = malloc(sizeof(stack_t));
    if (new_node == NULL)
    {
        fprintf(stderr, "Error: malloc failed\n");
        exit(EXIT_FAILURE);
    }

    new_node->n = value;
    new_node->prev = NULL;
    new_node->next = NULL;

    if (mode == STACK_MODE) /* Insert at the top (LIFO) */
    {
        new_node->next = *stack;
        if (*stack != NULL)
            (*stack)->prev = new_node;
        *stack = new_node;
    }
    else if (mode == QUEUE_MODE) /* Insert at the end (FIFO) */
    {
        if (*stack == NULL) /* If stack/queue is empty */
        {
            *stack = new_node;
        }
        else
        {
            current = *stack;
            while (current->next != NULL)
                current = current->next;

            current->next = new_node;
            new_node->prev = current;
        }
    }
}

